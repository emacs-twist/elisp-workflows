name: Compile and test
on:
  workflow_call:
    inputs:
      rice-config:
        required: false
        type: string
        default: 'github:emacs-twist/rice-config'
      melpa:
        required: false
        type: string
        default: 'github:melpa/melpa'
      systems:
        required: false
        type: string
        default: 'github:nix-systems/default'
      registries:
        required: false
        type: string
        default: 'github:emacs-twist/registries'
      lock-dir:
        required: false
        type: string
        default: '.rice-lock/default'
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
      - name: Get the matrix
        id: matrix
        run: |
          set -e
          echo "matrix=$(\
            nix eval "${{ inputs.rice-config }}#github.matrix" \
            --override-input rice-src "path:$PWD" --override-input melpa "${{ inputs.melpa }}" \
            ${{ inputs.lock-dir != '' && format('--override-input rice-lock "path:$PWD/{0}"', inputs.lock-dir) || '' }} \
            --override-input registries "${{ inputs.registries }}" \
            --override-input systems "${{ inputs.systems }}" \
            --json)" >> "$GITHUB_OUTPUT"
  compile-and-test:
    needs: matrix
    strategy:
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
        with:
          extra_nix_config: |
            accept-flake-config = true
      - name: Byte compile
        run: |
          nix build \
            "${{ inputs.rice-config }}#checks.${{ matrix.arch }}.${{ matrix.target }}-compile-${{ matrix.emacs }}" \
            --override-input rice-src "path:$PWD" --override-input melpa "${{ inputs.melpa }}" \
            ${{ inputs.lock-dir != '' && format('--override-input rice-lock "path:$PWD/{0}"', inputs.lock-dir) || '' }} \
            --override-input registries "${{ inputs.registries }}" \
            --override-input systems "${{ inputs.systems }}" \
            --print-build-logs
      # The same options as byte-compile except for the subcommand (test-type)
      # and the installable (test-derivation).
      - name: Test
        if: ${{ matrix.test-type }}
        run: |
          nix ${{ matrix.test-type }} \
            "${{ inputs.rice-config }}#${{ matrix.test-derivation }}" \
            --override-input rice-src "path:$PWD" --override-input melpa "${{ inputs.melpa }}" \
            ${{ inputs.lock-dir != '' && format('--override-input rice-lock "path:$PWD/{0}"', inputs.lock-dir) || '' }} \
            --override-input registries "${{ inputs.registries }}" \
            --override-input systems "${{ inputs.systems }}" \
            --print-build-logs
